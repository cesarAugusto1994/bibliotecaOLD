<?php

namespace bibliotecaBundle\Entity;

use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;

/**
 * AcervoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AcervoRepository extends \Doctrine\ORM\EntityRepository
{
    public function findByAtivo()
    {

        return $this->findBy(
            [
                'ativo' => 1
            ],
            [
                'id' => 'DESC'
            ]
        );

    }

    public function Inativar($id)
    {

        $repository = $this->_em->getRepository(Acervo::class);
        $acervo = $repository->findOneBy(['id' => $id]);

        $acervo->getId();

        if (0 == $acervo->getAtivo()) {
            $acervo->setAtivo(1);
        } else {
            $acervo->setAtivo(0);
        }

        $acervo->setAlteracao(new \DateTime('now'));

        $this->_em->persist($acervo);
        $this->_em->flush();

        return new Response('Acervo Inativado ' . $acervo->getTitulo());
    }

    public function Editar(array $array)
    {
        $repository = $this->_em->getRepository(Acervo::class);
        $acervo = $repository->findOneBy(['id' => $array['id']]);

        $acervo->getId();

        if (!is_null($array['titulo'])) {
            $acervo->setTitulo($array['titulo']);
        }

        if (!is_null($array['autor'])) {
            $acervo->setAutor($array['autor']);
        }

        $acervo->setAlteracao(new \DateTime('now'));

        $this->_em->merge($acervo);
        $this->_em->flush();

        return new Response('Acervo Editado ' . $acervo->getTitulo());
    }
}
